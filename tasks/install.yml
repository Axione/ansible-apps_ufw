---
- name: Debian | Installing packages
  package:
    name: ufw
    state: present
  when: ansible_os_family == "Debian"

- when: ansible_os_family == "RedHat" or ansible_os_family == "Rocky"
  block:
    - name: Redhat | Installing dnf repo
      dnf:
        name: "epel-release"
        state: present

    - name: Redhat | Installing packages
      dnf:
        name: ufw
        state: present

#- name: "Start and enable service"
#  service:
#    name: ufw
#    state: started
#    enabled: true

- name: Start and enable ufw
  community.general.ufw:
    state: enabled

- name: Configuring service
  template:
    src: "ufw.j2"
    dest: "{{ ufw_config_file }}"
    mode: 0644
  notify: reload ufw
  when: ufw_manage_config

- name: Applying rules
  community.general.ufw:
    comment: "{{ item.comment | default(omit) }}"
    default: "{{ item.default | default(omit) }}"
    delete: "{{ item.delete | default(omit) }}"
    direction: "{{ item.direction | default(omit) }}"
    from_ip: "{{ item.from_ip | default(omit) }}"
    from_port: "{{ item.from_port | default(omit) }}"
    insert: "{{ item.insert | default(omit) }}"
    insert_relative_to: "{{ item.insert_relative_to | default(omit) }}"
    interface: "{{ item.interface | default(omit) }}"
    interface_in: "{{ item.interface_in | default(omit) }}"
    interface_out: "{{ item.interface_out | default(omit) }}"
    log: "{{ item.log | default(omit) }}"
    logging: "{{ item.logging | default(omit) }}"
    name: "{{ item.name | default(omit) }}"
    proto: "{{ item.proto | default(omit) }}"
    route: "{{ item.route | default(omit) }}"
    rule: "{{ item.rule | default(omit) }}"
    to_ip: "{{ item.to_ip | default(omit) }}"
    to_port: "{{ item.to_port | default(omit) }}"
  with_items: "{{ ufw_rules }}"

- name: Add Docker specific after rules
  copy:
    src: 'after.rules'
    dest: '/etc/ufw/after.rules'
    remote_src: true
    mode: '0640'
  when: ufw_docker
